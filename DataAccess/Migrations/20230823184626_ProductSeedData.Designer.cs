// <auto-generated />
using System;
using DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ShoppingContext))]
    [Migration("20230823184626_ProductSeedData")]
    partial class ProductSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Fruits & Vegetables"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Meat"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Drink"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Breakfast"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Cleaning Products"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Baby & Toy"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Paper & Cosmetics"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Food Products"
                        });
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Çilek",
                            Price = 45.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Muz",
                            Price = 49.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Patates",
                            Price = 15.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Soğan",
                            Price = 24.0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Kıyma",
                            Price = 224.0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Tavuk",
                            Price = 136.0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Name = "Kola 2.5LT",
                            Price = 46.0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Name = "Şalgam 1 LT",
                            Price = 26.0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Name = "Peynir",
                            Price = 158.0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Name = "Zeytin",
                            Price = 67.0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            Name = "Helva",
                            Price = 92.0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 5,
                            Name = "Cif",
                            Price = 32.0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Name = "Domestos",
                            Price = 63.0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 6,
                            Name = "Yarış Arabası",
                            Price = 254.0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 6,
                            Name = "Bebek Bezi 0-1 Yaş",
                            Price = 314.0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 7,
                            Name = "Tuvalet Kağıdı",
                            Price = 144.0
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 7,
                            Name = "Dedorant",
                            Price = 72.0
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 8,
                            Name = "Makarna",
                            Price = 18.0
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 8,
                            Name = "Pirinç Baldo",
                            Price = 38.0
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 8,
                            Name = "Çorba",
                            Price = 13.0
                        });
                });

            modelBuilder.Entity("Entity.Cart", b =>
                {
                    b.HasOne("Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.HasOne("Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entity.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
